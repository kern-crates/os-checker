name: Run Checkers

on:
  push:
    branches:
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:

env:
  # gh cli needs this token
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  # os-checker log level
  RUST_LOG: info
  # flag a bot commit
  BOT: 1
  # false: run with json stdout emitted, and no interaction with database;
  # true: run with json file emitted, and push it to database.
  PUSH: true
  toolchain: nightly-2025-06-26
  # push to which database branch 
  DATABASE: main
  # cache.redb tag in database release
  TAG_CACHE: cache-os-checker-v0.8.0.redb
  # checkers in database release
  TAG_PRECOMPILED_CHECKERS: cache-os-checker-v0.8.0.redb
  # force downloading repos to run check 
  FORCE_REPO_CHECK: false
  # force running checks after downloading repos
  FORCE_RUN_CHECK: atomvchecker
  # use which configs
  OS_CHECKER_CONFIGS: repos.json # for debug single repo
  # OS_CHECKER_CONFIGS: repos-default.json repos-ui.json # full repo list

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Prepare Makefile and repos JSONs
        run: |
          mkdir -p ~/check/batch
          cp Makefile ~/check/
          cp assets/repos.json ~/check/
          cp assets/repos-ui.json ~/check/
          cp assets/embassy.json ~/check/
          cp assets/large.json ~/check/
          cd ~/check
          gh release download -R kern-crates/.github -p os-checker_config.json
          # temporarily disable qclic/e1000e-frame
          jq 'del(."qclic/e1000e-frame")' os-checker_config.json > repos-default.json
          gh release download -R os-checker/database ${{ env.TAG_CACHE }} -p cache.redb || echo "cache.redb not found"
          ls -alh

      - uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ env.toolchain }}
          components: rustfmt, clippy

      - name: Install Checkers
        run: |
          rustup default
          gh release download --clobber -R os-checker/database ${{ env.TAG_PRECOMPILED_CHECKERS }} -p checkers.tar.xz
          tar -xvJf checkers.tar.xz -C ~/.cargo/bin/
          cargo audit --version
          cargo outdated --version
          cargo geiger --version
          cargo semver-checks --version
          cargo udeps --version
          rustup default nightly-2025-01-10 && cargo mirai --help
          rustup default nightly-2025-02-01 && cargo lockbud --help
          rustup default nightly-2024-10-12 && cargo rapx --help
          rustup default nightly-2021-10-21 && cargo rudra --help
          rustup default nightly-2023-03-09 && cargo atomvchecker --help
          rustup default ${{ env.toolchain }}

      - name: Extra building environment required by OS libs
        run: |
          sudo apt update
          sudo apt install libudev-dev -y # ZR233/ostool requires
          sudo apt install libfuse-dev fuse3 libfuse3-dev -y # yuoo655/ext4libtest requires

      - name: Install os-checker
        run: cargo install --path . --force --locked

      - name: Install os-checker batch
        run: cargo install --path . --force --example batch --locked

      # Rewrite lockbud dignostics.
      - name: Install convert_repo_json
        run: cargo install --path os-checker-database --force --example convert_repo_json --locked

      - name: Run All Checkers
        run: |
          git lfs install --skip-smudge # 如果 lfs 下载不了大文件，跳过下载
          df -alh
          cd ~/check
          os-checker db --start cache.redb

          # make run || echo "运行所有仓库的检查失败，但依然提交已有的 cache.redb 到数据仓库"
          # 仅在支持新检查时采用 batch，因为中途一旦出错，只使用 run 无法在中途上传检查结果的缓存数据
          batch --size 16 # -- --use-last-cache #|| echo "运行所有仓库的检查失败，但依然提交已有的 cache.redb 到数据仓库"

          os-checker db --done cache.redb

      - name: Run cache_redb test
        run: |
          cp ~/check/cache.redb .
          cargo test -p os-checker-types -- --nocapture cache_redb

      # - name: Run layout --list-targets test
      #   run: make layout_list_targets

      - name: Run config --merged or --list-repos
        run: |
          cd ~/check
          echo "os-checker config --merged"
          os-checker config --merged
          echo "os-checker config --list-repos"
          os-checker config --list-repos

      - name: Update cache.redb
        run: |
          cargo install --path os-checker-database --locked
          cd ~/check
          df -alh
          make upload

      - name: Commit And Push To database repo
        if: ${{ env.PUSH == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          cd ~/check
          make clone_database
          cd database

          git switch ${{ env.DATABASE }}
          echo "切换到 ${{ env.DATABASE }} 分支"

          git pull --rebase # 防止二次运行 CI 时落后于远程分支

          rm -rf batch # 移除旧的 batch 数据
          cp -r ~/check/batch . # 更新新的 batch 数据
          cp ~/check/cache.redb . # 复制数据库缓存文件
          sh push.sh
          df -alh

